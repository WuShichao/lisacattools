
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples_ucb/plot_source_sky_ellipses.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_ucb_plot_source_sky_ellipses.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_ucb_plot_source_sky_ellipses.py:


Sky Localization Ellipses
=========================

Plot 1-sigma contours of well-localized sources' sky location in galactic coordinates.

.. GENERATED FROM PYTHON SOURCE LINES 9-10

Load catalog and compute sky areas

.. GENERATED FROM PYTHON SOURCE LINES 10-53

.. code-block:: default

    import pandas as pd
    import numpy as np
    import matplotlib.pyplot as plt
    from matplotlib.patches import Ellipse
    import matplotlib.colors as colors
    import matplotlib.cm as cm
    from lisacattools import GWCatalog, GWCatalogs, GWCatalogType
    from lisacattools import convert_ecliptic_to_galactic, ellipse_area, confidence_ellipse

    # Start by loading the main catalog file processed from GBMCMC outputs
    catPath = "../../tutorial/data/ucb"
    catName = "cat15728640_v2.h5"
    catalogs = GWCatalogs.create(GWCatalogType.UCB, catPath, catName)
    catalog = catalogs.get_last_catalog()

    #load all detection attributes
    detections_attr = catalog.get_attr_detections()
    detections = catalog.get_detections(detections_attr)

    # loop through all of the sources, compute sky area, and add as a column to the catalog
    area = np.empty(len(detections.index))
    sources = list(detections.index)

    for idx, source in enumerate(sources):

        # load source chain
        samples = catalog.get_source_sample(source,['SNR','Frequency','Ecliptic Longitude','coslat'])

        # correct sign error in catalog production
        samples['Ecliptic Latitude'] = np.pi/2 - np.arccos(samples['coslat'])

        # convert from ecliptic to galactic coordinates
        convert_ecliptic_to_galactic(samples)

        # create numpy arrays of the derived parameters
        area[idx] = ellipse_area(samples[['Galactic Longitude', 'Galactic Latitude']])

    # insert new numpy arrays into main catalog dataframe
    detections.insert(len(detections.columns), 'Sky Area', area, True)

    # show that, indeed, Sky Area is now a column in the dataframe
    detections[['Frequency', 'SNR', 'Sky Area']].head()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    INFO:numexpr.utils:NumExpr defaulting to 4 threads.


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Frequency</th>
          <th>SNR</th>
          <th>Sky Area</th>
        </tr>
        <tr>
          <th>name</th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>LDC0081497609</th>
          <td>0.008150</td>
          <td>30.9800</td>
          <td>326.231661</td>
        </tr>
        <tr>
          <th>LDC0081535331</th>
          <td>0.008154</td>
          <td>19.2096</td>
          <td>541.571806</td>
        </tr>
        <tr>
          <th>LDC0081547837</th>
          <td>0.008155</td>
          <td>148.8680</td>
          <td>11.854226</td>
        </tr>
        <tr>
          <th>LDC0081595365</th>
          <td>0.008160</td>
          <td>88.8300</td>
          <td>69.814925</td>
        </tr>
        <tr>
          <th>LDC0081697901</th>
          <td>0.008170</td>
          <td>19.8016</td>
          <td>854.075802</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 54-58

Cut source catalog on localization, and plot skymap of selected sources.
In this example we use 100 sq deg as the localization threshold.
*NOTE:* 10 sq deg is more appropriate for EM follow-up, but makes for a
less interesting figure

.. GENERATED FROM PYTHON SOURCE LINES 58-104

.. code-block:: default


    # Make new dataframe containing only "well-localized" events
    max_sky_area = 100  # localization threshold (square degrees)
    cat_loc = detections[
        (detections['Sky Area'] < max_sky_area)
    ]  # cut sources based on max_sky_area

    # set up the figure
    fig = plt.figure(figsize=(12, 6), dpi=110)
    ax = plt.axes()

    ax.grid()
    ax.set(
        xlim=(-180, 180),
        ylim=(-90, 90),
        xlabel="Galactic Longitude",
        ylabel="Galactic Latitude",
    )

    # color ellipses by log frequency
    cNorm = colors.LogNorm(vmin=cat_loc['Frequency'].min(), vmax=cat_loc['Frequency'].max())
    scalarMap = cm.ScalarMappable(norm=cNorm, cmap=plt.cm.get_cmap('viridis_r'))
    cbar = fig.colorbar(scalarMap)
    cbar.set_label("Frequency [Hz]")

    # loop over all sources adding ellipse to plot
    sources = list(cat_loc.index)
    for source in sources:

        # load source chain
        samples = catalog.get_source_sample(source,['Frequency','Ecliptic Longitude','coslat'])

        # correct sign error in catalog production
        samples['Ecliptic Latitude'] = np.pi/2 - np.arccos(samples['coslat'])

        # convert from ecliptic to galactic coordinates
        convert_ecliptic_to_galactic(samples)

        # get centroid and 1-sigma contours in galactic coordinates, add to plot
        confidence_ellipse(
            samples[['Galactic Longitude', 'Galactic Latitude']],
            ax,
            n_std=1.0,
            edgecolor=scalarMap.to_rgba(np.array(cat_loc.loc[source].Frequency)),
            linewidth=1.0,
        )



.. image:: /examples_ucb/images/sphx_glr_plot_source_sky_ellipses_001.png
    :alt: plot source sky ellipses
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 10 minutes  13.002 seconds)


.. _sphx_glr_download_examples_ucb_plot_source_sky_ellipses.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_source_sky_ellipses.py <plot_source_sky_ellipses.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_source_sky_ellipses.ipynb <plot_source_sky_ellipses.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
